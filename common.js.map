{"version":3,"sources":["./node_modules/rxjs-compat/_esm5/BehaviorSubject.js","./src/app/pipes/pipes.module.ts","./src/app/pipes/titleCase.pipe.ts","./src/app/pipes/truncate.pipe.ts","./src/app/services/tool.service.ts","./src/app/shared/util/available-tools.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export { BehaviorSubject } from 'rxjs';\n//# sourceMappingURL=BehaviorSubject.js.map","// other imports\nimport { TitleCasePipe } from './titleCase.pipe';\nimport { TruncatePipe } from './truncate.pipe';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [\n    // dep modules\n  ],\n  declarations: [ \n    TitleCasePipe,\n      TruncatePipe,\n  ],\n  exports: [\n    TitleCasePipe,\n      TruncatePipe,\n  ]\n})\nexport class PipesModule {}\n","// capitalize.pipe.ts\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'capitalize'})\nexport class TitleCasePipe implements PipeTransform {\n  transform(value: string, args: string[]): any {\n    if (!value) return value;\n\n    return value.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n    transform(value: string, limit = 100, completeWords = false, ellipsis = '...') {\n        if (completeWords) {\n            limit = value.substr(0, limit).lastIndexOf(' ');\n            if (limit == -1) {\n                limit = value.length;\n            }\n        }\n        if (value.length > limit) {\n            return `${value.substr(0, limit)}${ellipsis}`;\n        } else {\n            return value;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ToolDefinition } from '../models/ToolDefinition';\nimport availableTools from '../shared/util/available-tools';\nimport { CollectionViewer, DataSource } from \"@angular/cdk/collections\";\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable() \nexport class ToolService implements DataSource<ToolDefinition> {\n\n  private _items: BehaviorSubject<ToolDefinition[]>;\n  private _categories: BehaviorSubject<Set<string>>; \n  private dataStore: {\n    items: ToolDefinition[],\n    categories: Set<string>,\n  };\n    \n  // Using Angular DI we use the HTTP service\n  constructor() {\n    this.dataStore = { \n      items: [],\n      categories: new Set(),\n    };\n    this._items = <BehaviorSubject<ToolDefinition[]>>new BehaviorSubject([]);\n    this._categories = <BehaviorSubject<Set<string>>>new BehaviorSubject(new Set());\n  }\n\n\n  connect(collectionViewer: CollectionViewer): Observable<ToolDefinition[]> {\n    return this._items.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n      this._items.complete();\n  }\n\n  public get items() {\n    return this._items.asObservable();\n  }\n\n  public get categories() {\n    return this._categories.asObservable();\n  }\n\n\n  load(query?: string, category?: string): void {\n    const newItems: ToolDefinition[] = [];\n    const categories = new Set<string>();\n    availableTools.forEach((tool: ToolDefinition): void => {\n      newItems.push(tool);\n      categories.add(tool.category);\n    });\n    this.dataStore.items = newItems;\n    this._items.next(Object.assign({}, this.dataStore).items);\n    this.dataStore.categories = categories;\n    this._categories.next(Object.assign({}, this.dataStore).categories);  \n  }\n}","import { ToolDefinition } from \"../../models/ToolDefinition\";\n\nconst result: ToolDefinition[] = [\n    {\n        name: 'keccak256',\n        category: 'crypto'\n    },\n\n    {\n        name: 'broadcast transaction',\n        category: 'rpc'\n    },\n    {\n        name: 'decode transaction',\n        category: 'crypto'\n    },\n    {\n        name: 'verify transaction',\n        category: 'crypto'\n    }\n];\n\nexport default result;"],"sourceRoot":"webpack:///"}